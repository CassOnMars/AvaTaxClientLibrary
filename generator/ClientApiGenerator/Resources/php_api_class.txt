<?php namespace Avalara;
/*
 * AvaTax API Client Library
 *
 * (c) 2004-2016 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Avalara.AvaTax;

use Guzzle\Http\Client;

/**
 * @@author Ted Spence <ted.spence@@avalara.com>
 * @@author Bob Maidens <bob.maidens@@avalara.com>
 */
class AvaTaxClient 
{

@foreach(var m in SwaggerModel.Methods) {
<text>
    /**
	 * @m.Comment
     */
    public function @m.Name()
    {
        return $this->restcall('@m.URI', '@m.HttpVerb', $payload);
    }

</text>
}

    /**
     * @param Client $client
     */
    public function __construct(Client $client)
    {
        // Configure the HTTP client
        \$this->client = \$client->setBaseUrl('https://sandbox-rest.avatax.com')
            ->setDefaultOption('headers', array('Accept' => 'application/json'));
    }

    private function restcall($apiUrl, $method, $payload)
    {
        $timestamp = time();
        $url .= "&ts=" . $timestamp . "&apikey=" . $apiKey . "&hash=" . $hash;

        try {
            $response = $this->client->get($this->$baseurl . $apiUrl)->send();

            if ($response->getStatusCode() != 200) {
                throw new \Exception('Bad Response');
            }

            $body = $response->getBody();

            return json_decode($body);

        } catch (\Exception $e) {
            return $e->getMessage();
        }
    }
}
s