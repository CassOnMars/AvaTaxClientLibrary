---
layout: page
title: @MethodModel.Name
categories: [AvaTax API Reference]
product: avaTax
doctype: restapi
nav: apis
disqus: 1
---
@{
    string sampleQueryString = "";
    if (MethodModel.Params.Count > 0) {
        foreach (var p in MethodModel.Params) {
            if (p.ParameterLocation == ParameterLocationType.QueryString) {
                sampleQueryString = sampleQueryString + p.ParamName + "=value&";
            }
        }
        if (sampleQueryString.Length > 0) {
            sampleQueryString = "?" + sampleQueryString.Substring(0, sampleQueryString.Length - 1);
        }
    }
}

<table class="styled-table">
    <thead>
    <tr>
        <th>API</th>
        <td>@MethodModel.Name</td>
    </tr>
    <tr>
        <th>Purpose</th>
        <td>@MethodModel.Summary</td>
    </tr>
    <tr>
        <th>HTTP Verb</th>
        <td>@MethodModel.HttpVerb.ToUpper()</td>
    </tr>
    <tr>
        <th>REST Path</th>
        <td>@MethodModel.URI</td>
    </tr>
    <tr>
        <th>URL (Sandbox)</th>
        <td>@{ Write("https://sandbox-rest.avatax.com" + MethodModel.URI); }</td>
    </tr>
    <tr>
        <th>URL (Production)</th>
        <td>@{ Write("https://rest.avatax.com" + MethodModel.URI); }</td>
    </tr>
    <tr>
        <th>Query String</th>
        <td>@sampleQueryString</td>
    </tr>
    <tr>
        <th>Response Type</th>
@if (GetModel(MethodModel.ResponseTypeName) != null) {
    Write("        <td><a href=\"../../models/" + MethodModel.ResponseTypeName.ToLower() + "\">" + MethodModel.ResponseTypeName + "</a></td>");
} else if (MethodModel.ResponseTypeName.StartsWith("FetchResult<")) {
    var innerTypeName = MethodModel.ResponseTypeName.Substring(12, MethodModel.ResponseTypeName.Length - 13);
    Write("        <td><a href=\"../../models/FetchResult\">FetchResult</a> containing an array of <a href=\"../../models/" + innerTypeName + "\">" + innerTypeName + "</a></td>");
} else {
    Write("        <td>" + MethodModel.ResponseTypeName + "</td>");
}
    </tr>
    <tr>
        <th>Content-Type</th>
        <td>@if (MethodModel.ResponseTypeName == "FileResult") { Write("application/octet-stream"); } else { Write("application/json"); }</td>
    </tr>
    </thead>
</table>

### Description

@MethodModel.Description

### Parameters

<table class="styled-table">
	<thead>
		<tr>
			<th>Location</th>
			<th>Parameter</th>
			<th>Type</th>
            <th>Attributes</th>
			<th>Summary</th>
            <th>Example</th>
		</tr>
	</thead>
	<tbody>
@{
    string typelink, elementtype;
    foreach (var p in MethodModel.Params) {
        typelink = null;
            
        // Determine root type
        if (p.IsArrayType) {
            elementtype = p.ArrayElementType;
        } else {
            elementtype = p.TypeName.Replace("?", "");
        }
        var model = GetModel(elementtype);
        if (model != null) typelink = "../../models/" + elementtype;
        if (IsEnumType(elementtype)) typelink = "../../enums/" + elementtype;
        
        // Assemble API properties
        var props = new System.Collections.Generic.List<string>();
        if (p.Required) {
            props.Add("<b>Required</b>");
        } else {
            props.Add("Optional");
        }
        if (p.IsArrayType) props.Add("Array");
        if (p.ReadOnly) props.Add("ReadOnly");
        if (p.MinLength != null) props.Add("Minimum length: " + p.MinLength.Value.ToString());
        if (p.MaxLength != null) props.Add("Maximum length: " + p.MaxLength.Value.ToString());
        
        // Print out the line
        WriteLine("<tr>");
        WriteLine("    <td>" + p.ParameterLocation.ToString() + "</td>");
        WriteLine("    <td>" + p.ParamName + "</td>");
        if (typelink == null) {
            WriteLine("    <td>" + elementtype + (p.IsArrayType ? "[]" : "") + "</td>");
        } else {
            WriteLine("    <td><a href=\"" + typelink + "\">" + elementtype + (p.IsArrayType ? "[]" : "") + "</a></td>");
        }
        WriteLine("    <td>" + String.Join(", ", props) + "</td>");
        WriteLine("    <td>" + p.Comment + "</td>");
        WriteLine("    <td>" + (String.IsNullOrEmpty(p.Example) ? "" : "<pre class=\"highlight\">" + p.Example + "</pre>") + "</td>");
        WriteLine("</tr>");
    }
}
    </tbody>
</table>

@{
WriteLine("<div class=\"btn-callout\"><a href=\"https://sandbox-rest.avatax.com/swagger/ui/index.html#!/" + MethodModel.Category + "/" + MethodModel.Name + "\" role=\"button\">Try It Now</a></div>");
}

@if (MethodModel.BodyParam != null) {
<text>
### Example Request

@{ Write("<code class='highlight-rouge'>" + MethodModel.HttpVerb.ToUpper() + " https://sandbox-rest.avatax.com" + MethodModel.URI + "</code>"); }

<pre class="highlight" style="overflow:scroll; height:400px;">
@GetExample(MethodModel.BodyParam.TypeName)
</pre>
</text>
}

### Example Response

@{
if (GetModel(MethodModel.ResponseTypeName) != null) {
    WriteLine("<pre class=\"highlight\" style=\"overflow:scroll; height:400px;\">\r\n" + GetExample(MethodModel.ResponseTypeName) + "\r\n</pre>");
}
}

### Example Using CURL

<pre class="highlight" style="overflow:scroll; height:400px;">
curl 
    -X @MethodModel.HttpVerb.ToUpper() 
    --header 'Accept: application/json' 
    --header 'Authorization: Basic VVNFUk5BTUU6UEFTU1dPUkQ='
    --header 'X-Avalara-Client: AvaTax API Example; 2.17.4-60; CURL; 1.0' 
@if (MethodModel.BodyParam != null) {
    WriteLine("    -d '" + GetExample(MethodModel.BodyParam.TypeName) + "'");
}
@{
    Write("    'https://sandbox-rest.avatax.com");
    Write(MethodModel.URI + sampleQueryString);
}
</pre>
<br clear="all"/>

<br/>
