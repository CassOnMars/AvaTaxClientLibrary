---
layout: page
title: @ClassModel.SchemaName
categories: [AvaTax API Reference]
product: avaTax
doctype: restapi
nav: apis
disqus: 1
---

## Description

@ClassModel.Comment

## Fields

<table class="styled-table">
	<thead>
		<tr>
			<th>Parameter</th>
			<th>Type</th>
			<th>Properties</th>
			<th>Summary</th>
			<th>Example</th>
		</tr>
	</thead>
	<tbody>
@{
string typelink, elementtype;
foreach(var p in ClassModel.Properties) {
    WriteLine("    <tr>");
    WriteLine("        <td>" + p.CleanParamName + "</td>");
    typelink = null;
    
    // Determine root type
    if (p.IsArrayType) {
        elementtype = p.ArrayElementType;
    } else {
        elementtype = p.TypeName.Replace("?", "");
    }
    var model = GetModel(elementtype);
    if (model != null) typelink = "../../models/" + elementtype;
    if (IsEnumType(elementtype)) typelink = "../../enums/" + elementtype;
    if (typelink == null) {
        WriteLine("        <td>" + elementtype + (p.IsArrayType ? "[]" : "") + "</td>");
    } else {
        WriteLine("        <td><a href=\"" + typelink + "\">" + elementtype + (p.IsArrayType ? "[]" : "") + "</a></td>");
    }
    
    // Assemble API properties
    var props = new System.Collections.Generic.List<string>();
    if (p.Required) {
        props.Add("<b>Required</b>");
    } else {
        props.Add("Optional");
    }
    if (p.IsArrayType) props.Add("Array");
    if (p.ReadOnly) props.Add("ReadOnly");
    if (p.MinLength != null) props.Add("Minimum length: " + p.MinLength.Value.ToString());
    if (p.MaxLength != null) props.Add("Maximum length: " + p.MaxLength.Value.ToString());
    WriteLine("        <td>" + String.Join(", ", props) + "</td>");
    WriteLine("        <td>" + p.Comment + "</td>");
    WriteLine("        <td>" + (String.IsNullOrEmpty(p.Example) ? "" : "<pre class=\"highlight\">" + p.Example + "</pre>") + "</td>");
    WriteLine("    </tr>");
}
}
    </tbody>
</table>

<br/>
